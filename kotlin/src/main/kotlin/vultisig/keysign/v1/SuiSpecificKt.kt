// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: vultisig/keysign/v1/blockchain_specific.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package vultisig.keysign.v1;

@kotlin.jvm.JvmName("-initializesuiSpecific")
public inline fun suiSpecific(block: vultisig.keysign.v1.SuiSpecificKt.Dsl.() -> kotlin.Unit): vultisig.keysign.v1.BlockchainSpecific.SuiSpecific =
  vultisig.keysign.v1.SuiSpecificKt.Dsl._create(vultisig.keysign.v1.BlockchainSpecific.SuiSpecific.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `vultisig.keysign.v1.SuiSpecific`
 */
public object SuiSpecificKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vultisig.keysign.v1.BlockchainSpecific.SuiSpecific.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vultisig.keysign.v1.BlockchainSpecific.SuiSpecific.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vultisig.keysign.v1.BlockchainSpecific.SuiSpecific = _builder.build()

    /**
     * `string reference_gas_price = 1 [json_name = "referenceGasPrice"];`
     */
    public var referenceGasPrice: kotlin.String
      @JvmName("getReferenceGasPrice")
      get() = _builder.getReferenceGasPrice()
      @JvmName("setReferenceGasPrice")
      set(value) {
        _builder.setReferenceGasPrice(value)
      }
    /**
     * `string reference_gas_price = 1 [json_name = "referenceGasPrice"];`
     */
    public fun clearReferenceGasPrice() {
      _builder.clearReferenceGasPrice()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class CoinKeyValuePairsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .vultisig.keysign.v1.CoinKeyValuePair coin_key_value_pairs = 2 [json_name = "coinKeyValuePairs"];`
     */
     public val coinKeyValuePairs: com.google.protobuf.kotlin.DslList<vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair, CoinKeyValuePairsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getCoinKeyValuePairsList()
      )
    /**
     * `repeated .vultisig.keysign.v1.CoinKeyValuePair coin_key_value_pairs = 2 [json_name = "coinKeyValuePairs"];`
     * @param value The coinKeyValuePairs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addCoinKeyValuePairs")
    public fun com.google.protobuf.kotlin.DslList<vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair, CoinKeyValuePairsProxy>.add(value: vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair) {
      _builder.addCoinKeyValuePairs(value)
    }
    /**
     * `repeated .vultisig.keysign.v1.CoinKeyValuePair coin_key_value_pairs = 2 [json_name = "coinKeyValuePairs"];`
     * @param value The coinKeyValuePairs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignCoinKeyValuePairs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair, CoinKeyValuePairsProxy>.plusAssign(value: vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair) {
      add(value)
    }
    /**
     * `repeated .vultisig.keysign.v1.CoinKeyValuePair coin_key_value_pairs = 2 [json_name = "coinKeyValuePairs"];`
     * @param values The coinKeyValuePairs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllCoinKeyValuePairs")
    public fun com.google.protobuf.kotlin.DslList<vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair, CoinKeyValuePairsProxy>.addAll(values: kotlin.collections.Iterable<vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair>) {
      _builder.addAllCoinKeyValuePairs(values)
    }
    /**
     * `repeated .vultisig.keysign.v1.CoinKeyValuePair coin_key_value_pairs = 2 [json_name = "coinKeyValuePairs"];`
     * @param values The coinKeyValuePairs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllCoinKeyValuePairs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair, CoinKeyValuePairsProxy>.plusAssign(values: kotlin.collections.Iterable<vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair>) {
      addAll(values)
    }
    /**
     * `repeated .vultisig.keysign.v1.CoinKeyValuePair coin_key_value_pairs = 2 [json_name = "coinKeyValuePairs"];`
     * @param index The index to set the value at.
     * @param value The coinKeyValuePairs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setCoinKeyValuePairs")
    public operator fun com.google.protobuf.kotlin.DslList<vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair, CoinKeyValuePairsProxy>.set(index: kotlin.Int, value: vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair) {
      _builder.setCoinKeyValuePairs(index, value)
    }
    /**
     * `repeated .vultisig.keysign.v1.CoinKeyValuePair coin_key_value_pairs = 2 [json_name = "coinKeyValuePairs"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearCoinKeyValuePairs")
    public fun com.google.protobuf.kotlin.DslList<vultisig.keysign.v1.BlockchainSpecific.CoinKeyValuePair, CoinKeyValuePairsProxy>.clear() {
      _builder.clearCoinKeyValuePairs()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun vultisig.keysign.v1.BlockchainSpecific.SuiSpecific.copy(block: `vultisig.keysign.v1`.SuiSpecificKt.Dsl.() -> kotlin.Unit): vultisig.keysign.v1.BlockchainSpecific.SuiSpecific =
  `vultisig.keysign.v1`.SuiSpecificKt.Dsl._create(this.toBuilder()).apply { block() }._build()

